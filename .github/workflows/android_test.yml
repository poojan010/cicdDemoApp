name: Upload Android Tests to App Center

on:
  workflow_call:
  push:
    branches:
      - master

jobs:
  android-test-upload:
    name: Android Test upload
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository # clone the repo to local ci workspace
        uses: actions/checkout@v2

      # setup JDK environment: mandatory as we need to build  android project
      - name: Set up our JDK environment for Android
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore node_modules from cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # install project deps with --frozen-lockfile to make sure we will have the same packages version ( very recommended  on running yarn install on ci)
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      ## configure cash for gradle : will help to reduce build time
      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew && cd ..

      - name: Pre processes for debug apk
        run: |
          test -d "android/app/src/main/assets" || mkdir -p "android/app/src/main/assets"
          npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res/
          npx react-native run-android || true

      - name: Generate Debug APK
        run: |
          cd android && ./gradlew assembleDebug && cd ..

      - name: Generate Test APK
        run: |
          cd android && ./gradlew assembleAndroidTest && cd ..

      - name: Install App center globally
        run: npm install -g appcenter-cli

      - name: Run Espresso Tests
        env:
          ANDROID_APK_DEBUG_PATH: ${{ github.workspace }}/android/app/build/outputs/apk/debug/app-debug.apk
          ANDROID_APK_RELEASE_PATH: ${{ github.workspace }}/app-release.apk
          ANDROID_BUILD_DIR: ${{ github.workspace }}/android/app/build/outputs/apk/androidTest/debug
        run: |
          appcenter test run espresso --app ${{ secrets.APP_OWNER }} --devices ${{ secrets.DEVICE_SET }} --app-path $ANDROID_APK_DEBUG_PATH --test-series ${{ secrets.TEST_SERIES }} --locale ${{ secrets.LOCALE }} --build-dir $ANDROID_BUILD_DIR --token ${{ secrets.APPCENTER_TOKEN }}
